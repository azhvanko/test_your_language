version: '3.8'

services:
  redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: redis_dev
  db:
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    image: tyl_db:dev
    restart: unless-stopped
    container_name: postgres_dev
    volumes:
      - postgres_dev:/var/lib/postgresql/data
    env_file:
      - ./.env
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: tyl_web:dev
    container_name: django_dev
    entrypoint: /usr/src/app/wait-for-postgres.sh
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: tyl_celery_worker:dev
    container_name: celery_worker_dev
    command: celery -A test_your_language worker -l INFO -f logs/celery_worker.log
    volumes:
      - .:/usr/src/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: tyl_celery_beat:dev
    container_name: celery_beat_dev
    command: celery -A test_your_language beat -l INFO -f logs/celery_beat.log
    volumes:
      - .:/usr/src/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - web

volumes:
  postgres_dev: