version: '3.8'

services:
  redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: redis_prod
  db:
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    image: tyl_db:prod
    restart: unless-stopped
    container_name: postgres_prod
    volumes:
      - tyl_db:/var/lib/postgresql/data
      - logs:/logs
    env_file:
      - ./postgres/.env.prod
  web:
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    image: tyl_web:prod
    container_name: django_prod
    entrypoint: /usr/src/app/wait-for-postgres.sh
    command: gunicorn test_your_language.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static:/usr/src/app/static
      - logs:/usr/src/app/logs
    env_file:
      - ./.env.prod
      - ./postgres/.env.prod
    depends_on:
      - redis
      - db
  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    image: tyl_celery_worker:prod
    container_name: celery_worker_prod
    command: celery -A test_your_language worker -l WARNING -f logs/celery/worker.log
    volumes:
      - logs:/usr/src/app/logs
    env_file:
      - ./.env.prod
      - ./postgres/.env.prod
    depends_on:
      - redis
      - web
  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    image: tyl_celery_beat:prod
    container_name: celery_beat_prod
    command: celery -A test_your_language beat -l WARNING -f logs/celery/beat.log
    volumes:
      - logs:/usr/src/app/logs
    env_file:
      - ./.env.prod
      - ./postgres/.env.prod
    depends_on:
      - redis
      - web
  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    image: tyl_nginx:prod
    container_name: nginx_prod
    ports:
      - 80:80
      - 443:443
    volumes:
      - logs:/var/www/example.com/logs
      - static:/var/www/example.com/static
    depends_on:
      - web

volumes:
  logs:
  static:
  tyl_db: